package com.controlart.dao.utils;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.controlart.dao.factory.ConnFactory;
import com.controlart.transfer.AcervoT;
import com.controlart.transfer.PecaT;
import com.controlart.transfer.TransacaoT;

public class HomeDao {
	private Connection connection;

	private static final String SQL_CONSULT_ACERVO = "SELECT ta.nm_acervo FROM tb_acervo ta ORDER BY ta.nm_acervo";
	private static final String SQL_CONSULT_PECA = "SELECT tp.nm_peca FROM tb_peca tp ORDER BY tp.nm_peca";
	private static final String SQL_CONSULT_TRANSACAO = "SELECT ttt.nm_tipo_transacao, tp.nm_peca FROM tb_transacao tt JOIN tb_tipo_transacao ttt ON tt.id_tipo_transacao = ttt.id_tipo_transacao JOIN tb_peca tp ON tt.id_peca = tp.id_peca WHERE ttt.tp_operacao = 'E' ORDER BY tt.dt_transacao DESC, tt.id_transacao DESC";

	public HomeDao() throws SQLException {
		connection = ConnFactory.getConnection();
	}

	private List<AcervoT> resultsetToObjectAcervo(ResultSet rs)
			throws SQLException {
		List<AcervoT> listaAcervoT = new ArrayList<AcervoT>();

		while (rs.next()) {
			AcervoT acervoT = new AcervoT();

			acervoT.setId(rs.getInt("ID_ACERVO"));
			acervoT.setNome(rs.getString("NM_ACERVO"));
			acervoT.setAtivo(rs.getInt("IN_ATIVO"));

			listaAcervoT.add(acervoT);
		}

		return listaAcervoT;
	}

	private List<PecaT> resultsetToObjectPeca(ResultSet rs) throws SQLException {
		List<PecaT> listaPecaT = new ArrayList<PecaT>();

		while (rs.next()) {
			PecaT pecaT = new PecaT();

			pecaT.setId(rs.getInt("ID_PECA"));
			pecaT.setNome(rs.getString("NM_PECA"));
			pecaT.setAtivo(rs.getInt("IN_ATIVO"));

			listaPecaT.add(pecaT);
		}

		return listaPecaT;
	}
	
	private List<TransacaoT> resultsetToObject(ResultSet rs)
			throws SQLException {
		List<TransacaoT> listaTransacaoT = new ArrayList<TransacaoT>();

		while (rs.next()) {
			TransacaoT transacaoT = new TransacaoT();

			transacaoT.setId(rs.getInt("ID_TRANSACAO"));
			transacaoT.setPeca(rs.getInt("ID_PECA"));
			transacaoT.setTipo(rs.getInt("ID_TIPO_TRANSACAO"));
			transacaoT.setAcervoOrigem(rs.getInt("ID_ACERVO_ORIGEM"));
			transacaoT.setAcervoDestino(rs.getInt("ID_ACERVO_DESTINO"));
			transacaoT.setDataTransacao(rs.getTimestamp("DT_TRANSACAO"));
			transacaoT.setDataPrevisao(rs.getTimestamp("DT_PREVISAO"));
			transacaoT.setDataDevolucao(rs.getTimestamp("DT_DEVOLUCAO"));
			transacaoT.setPreco(rs.getBigDecimal("VL_PRECO"));
			transacaoT.setOnline(rs.getInt("IN_ONLINE"));

			listaTransacaoT.add(transacaoT);
		}

		return listaTransacaoT;
	}
}
