package com.controlart.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.controlart.dao.factory.ConnFactory;
import com.controlart.dao.utils.DaoUtils;
import com.controlart.transfer.TipoPessoaT;
import com.controlart.transfer.TransacaoT;

public class TransacaoDao {
	private Connection connection;

	private static final String SQL_CONSULT_ALL = "SELECT tp.* FROM tb_tipo_pessoa tp ORDER BY tp.nm_tipo_pessoa";
	private static final String SQL_INSERT = "INSERT INTO tb_tipo_pessoa (nm_tipo_pessoa, ds_tipo_pessoa, in_ativo) VALUES (?, ?, ?)";

	public TransacaoDao() throws SQLException {
		connection = ConnFactory.getConnection();
	}

	public List<TransacaoT> consultAll() throws SQLException {
		PreparedStatement pStmt = null;
		ResultSet rs = null;

		try {
			pStmt = connection.prepareStatement(SQL_CONSULT_ALL);

			rs = pStmt.executeQuery();

			return resultsetToObjectT(rs);
		} finally {
			DaoUtils.closePreparedStatement(pStmt);
			DaoUtils.closeConnection(connection);
		}
	}

	private List<TransacaoT> resultsetToObjectT(ResultSet rs)
			throws SQLException {
		List<TransacaoT> listaTransacaoT = new ArrayList<TransacaoT>();

		while (rs.next()) {
			TransacaoT transacaoT = new TransacaoT();

			transacaoT.setIdTipoPessoa(rs.getInt("ID_TIPO_PESSOA"));
			transacaoT.setNmTipoPessoa(rs.getString("NM_TIPO_PESSOA"));
			transacaoT.setDsTipoPessoa(rs.getString("DS_TIPO_PESSOA"));
			transacaoT.setSituacao(rs.getInt("IN_ATIVO"));

			listaTransacaoT.add(tipoPessoaT);
		}

		return listaTransacaoT;
	}

	public void insert(TipoPessoaT tipoPessoaT) throws SQLException {
		PreparedStatement pStmt = null;

		try {
			pStmt = connection.prepareStatement(SQL_INSERT);
			pStmt.setObject(1, tipoPessoaT.getNmTipoPessoa());
			pStmt.setObject(2, tipoPessoaT.getDsTipoPessoa());
			pStmt.setObject(3, tipoPessoaT.getSituacao());

			pStmt.execute();
		} finally {
			DaoUtils.closePreparedStatement(pStmt);
			DaoUtils.closeConnection(connection);
		}
	}
}
