package com.controlart.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.controlart.dao.factory.ConnFactory;
import com.controlart.dao.utils.DaoUtils;
import com.controlart.transfer.ClassificacaoT;
import com.controlart.transfer.TipoPessoaT;

public class ClassificacaoDao {
	private Connection connection;

	private static final String SQL_CONSULT_ALL = "SELECT tc.* FROM tb_classificacao tc ORDER BY tc.nm_classificacao";
	private static final String SQL_INSERT = "INSERT INTO tb_classificacao (id_classificacao, nm_classificacao, in_ativo) VALUES (?, ?, ?)";
	private static final String SQL_UPDATE = "UPDATE tb_classificacao SET nm_classificacao = ?, in_ativo = ? WHERE id_classificacao = ?";
	private static final String SQL_INACTIVATE = "UPDATE tb_classificacao SET in_ativo = 0 WHERE id_classificacao = ?";

	public ClassificacaoDao() throws SQLException {
		connection = ConnFactory.getConnection();
	}

	public List<ClassificacaoT> consultAll() throws SQLException {
		PreparedStatement pStmt = null;
		ResultSet rs = null;

		try {
			pStmt = connection.prepareStatement(SQL_CONSULT_ALL);

			rs = pStmt.executeQuery();

			return resultsetToObjectT(rs);
		} finally {
			DaoUtils.closePreparedStatement(pStmt);
			DaoUtils.closeConnection(connection);
		}
	}

	public List<ClassificacaoT> consultAllAtivos() throws SQLException {
		PreparedStatement pStmt = null;
		ResultSet rs = null;

		try {
			pStmt = connection.prepareStatement(SQL_CONSULT_ALL_ATIVOS);

			rs = pStmt.executeQuery();

			return resultsetToObjectT(rs);
		} finally {
			DaoUtils.closeStatementAndResultSet(pStmt, rs);
			DaoUtils.closeConnection(connection);
		}
	}

	private List<ClassificacaoT> resultsetToObjectT(ResultSet rs)
			throws SQLException {
		List<ClassificacaoT> listaClassificacaoT = new ArrayList<ClassificacaoT>();

		while (rs.next()) {
			ClassificacaoT classificacaoT = new ClassificacaoT();

			classificacaoT.setId(rs.getInt("ID_CLASSIFICACAO"));
			classificacaoT.setNome(rs.getString("NM_CLASSIFICACAO"));
			classificacaoT.setDescricao(rs.getString("DS_CLASSIFICACAO"));
			classificacaoT.setSituacao(rs.getInt("IN_ATIVO"));

			listaClassificacaoT.add(classificacaoT);
		}

		return listaClassificacaoT;
	}

	public void insert(TipoPessoaT tipoPessoaT) throws SQLException {
		PreparedStatement pStmt = null;

		try {
			pStmt = connection.prepareStatement(SQL_INSERT);
			pStmt.setObject(1, tipoPessoaT.getNmTipoPessoa());
			pStmt.setObject(2, tipoPessoaT.getDsTipoPessoa());
			pStmt.setObject(3, tipoPessoaT.getSituacao());

			pStmt.execute();
		} finally {
			DaoUtils.closePreparedStatement(pStmt);
			DaoUtils.closeConnection(connection);
		}
	}

	public void update(TipoPessoaT tipoPessoaT) throws SQLException {
		PreparedStatement pStmt = null;

		try {
			pStmt = connection.prepareStatement(SQL_UPDATE);
			pStmt.setObject(1, tipoPessoaT.getNmTipoPessoa());
			pStmt.setObject(2, tipoPessoaT.getDsTipoPessoa());
			pStmt.setObject(3, tipoPessoaT.getSituacao());
			pStmt.setObject(4, tipoPessoaT.getIdTipoPessoa());

			pStmt.executeUpdate();
		} finally {
			DaoUtils.closePreparedStatement(pStmt);
			DaoUtils.closeConnection(connection);
		}
	}

	public void delete(TipoPessoaT tipoPessoaT) throws SQLException {
		PreparedStatement pStmt = null;

		try {
			pStmt = connection.prepareStatement(SQL_INACTIVATE);
			pStmt.setObject(1, tipoPessoaT.getIdTipoPessoa());

			pStmt.executeUpdate();
		} finally {
			DaoUtils.closePreparedStatement(pStmt);
			DaoUtils.closeConnection(connection);
		}
	}
}
